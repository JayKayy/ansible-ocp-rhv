[OSEv3:children]
masters
nodes
infra
lb
nfs
etcd
new_nodes
new_masters

[OSEv3:vars]
debug_level={{ debug_level | default('2') }}
docker_udev_workaround=True
openshift_node_debug_level={{ node_debug_level | default(debug_level, true) }}
openshift_master_debug_level={{ master_debug_level | default(debug_level, true) }}
openshift_master_access_token_max_seconds=2419200

# Cluster names  / wildcard subdomain#
#openshift_master_cluster_hostname={{ load_balancer_hostname }}
openshift_master_cluster_hostname={{ openshift_master_cluster_public_hostname }}
openshift_master_cluster_public_hostname={{ openshift_master_cluster_public_hostname }} 
openshift_master_default_subdomain={{ wildcard_zone }}

# Ports
openshift_master_api_port={{ console_port }} 
openshift_master_console_port={{ console_port }}

openshift_override_hostname_check=true
osm_use_cockpit=false

# release 
openshift_release=3.7
openshift_deployment_type=openshift-enterprise

# reboot masters
openshift_rolling_restart_mode=system

# disabled right now-masters don't have docker volgroup
#openshift_node_local_quota_per_fsgroup=512Mi
openshift_install_examples=true

# Identiy
{% if openshift_master_identity_providers is defined %}
openshift_master_identity_providers={{ openshift_master_identity_providers }}
{% else %}
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
{% endif %}

{% if openshift_master_htpasswd_users is defined %}
openshift_master_htpasswd_users={{ openshift_master_htpasswd_users }}
{% else %}
# admin:changeme
openshift_master_htpasswd_users={'admin': '$apr1$zAhyA9Ko$rBxBOwAwwtRuuaw8OtCwH0'}
{% endif %}

# Select default nodes for projects
osm_default_node_selector={{ osm_default_node_selector  | default('role=app') }}

# Service Broker 
openshift_enable_service_catalog=false
ansible_service_broker_install=false
template_service_broker_install=false
template_service_broker_selector=role=infra

# Users
ansible_become=yes
#ansible_ssh_user="{{ admin_user }}"
#remote_user="{{ admin_user }}"

# Networking
os_sdn_network_plugin_name={{ os_sdn_network_plugin_name | default('redhat/openshift-ovs-subnet') }}
{% if osm_cluster_network_cidr is defined %}
osm_cluster_network_cidr={{ osm_cluster_network_cidr }}
{% endif %}
{% if openshift_portal_net is defined %}
openshift_portal_net={{ openshift_portal_net }}"
{% endif %}

{% if openshift_disable_check is defined %}
openshift_disable_check={{ openshift_disable_check }}
{% endif %}
openshift_master_cluster_method=native

# Router
openshift_hosted_router_replicas=2
openshift_router_selector='role=infra'

{% if etcd_volume_size is defined %}
# Install etcd storage for ASB
#openshift_hosted_etcd_storage_kind={{ storage_type }}
#openshift_hosted_etcd_storage_nfs_options="*(rw,root_squash,sync,no_wdelay)"
#openshift_hosted_etcd_storage_nfs_directory={{ storage_dir }}
#openshift_hosted_etcd_storage_volume_name=etcd-vol2 
#openshift_hosted_etcd_storage_access_modes=["ReadWriteOnce"]
#openshift_hosted_etcd_storage_volume_size={{ etcd_volume_size }}
#openshift_hosted_etcd_storage_labels={'storage': 'etcd'}
{% endif %}

# Install registry
openshift_hosted_registry_storage_kind={{ storage_type }}
openshift_hosted_registry_storage_access_modes=['ReadWriteMany']
openshift_hosted_registry_storage_nfs_directory={{ storage_dir }}
openshift_hosted_registry_storage_volume_name=registryvol
openshift_hosted_registry_storage_volume_size={{ registry_volume_size }}
openshift_hosted_registry_replicas=1
openshift_registry_selector='role=infra'

# Install metrics | for NFS only one replicant supported
openshift_metrics_install_metrics=true
openshift_metrics_storage_kind={{ storage_type }}
openshift_metrics_storage_access_modes=['ReadWriteOnce']
openshift_metrics_storage_nfs_directory={{ storage_dir }}
openshift_metrics_storage_nfs_options='*(rw,root_squash)'
openshift_metrics_storage_volume_name=metrics
openshift_metrics_storage_volume_size={{ metrics_volume_size | default('10Gi') }}

openshift_metrics_hawkular_hostname="metrics.{{ wildcard_zone }}"
#openshift_master_metrics_public_url="https://metrics.{{ wildcard_zone }}/hawkular/metrics"
#openshift_metrics_cassandra_storage_type=nfs
#openshift_metrics_cassandra_pvc_prefix=cassandra
openshift_metrics_cassandra_pvc_size={{ cassandra_volume_size | default('10Gi') }}
#openshift_metrics_cassandra_pv_selector={{ '{"storage": "metrics"}' }}
openshift_metrics_cassandra_replicas="1"
openshift_metrics_hawkular_nodeselector={{ '{"role":"infra"}' }}
openshift_metrics_cassandra_nodeselector={{ '{"role":"infra"}' }}
openshift_metrics_heapster_nodeselector={{ '{"role":"infra"}' }}

# ES OPS
openshift_logging_use_ops=false

# ElasticSearch with more than 1 node
#logging_elasticsearch_rollout_override=True

# Install logging but post install | for NFS only one replica supported"
openshift_logging_install_logging=True
openshift_logging_master_public_url="https://{{ openshift_master_cluster_public_hostname }}:{{ console_port }}"
openshift_logging_storage_kind={{ storage_type }}
openshift_logging_storage_access_modes=['ReadWriteOnce']
openshift_logging_storage_nfs_directory={{ storage_dir }}
openshift_logging_storage_nfs_options='*(rw,root_squash)'
openshift_logging_storage_volume_name=logging
openshift_logging_storage_volume_size={{ logging_volume_size }}

openshift_logging_es_pvc_storage_class_name=""
openshift_logging_es_cpu_limit="1"
openshift_logging_es_cpu_request="1"
openshift_logging_es_memory_limit="1Gi"
openshift_logging_es_memory_request="500Mi"
openshift_logging_es_pvc_dynamic="false"
openshift_logging_es_pvc_size={{ logging_es_size }}
#openshift_logging_es_pv_selector={{ '{"storage": "logging"}' }}
openshift_logging_es_cluster_size=1
openshift_logging_fluentd_nodeselector={{ '{"logging":"true"}' }}
openshift_logging_es_nodeselector={{ '{"role":"infra"}' }}
openshift_logging_kibana_nodeselector={{ '{"role":"infra"}' }}
openshift_logging_curator_nodeselector={{ '{"role":"infra"}' }}

# prometheus
openshift_prometheus_storage_kind=nfs
openshift_prometheus_alertmanager_storage_kind=nfs
openshift_prometheus_alertbuffer_storage_kind=nfs
openshift_prometheus_storage_type=pvc
openshift_prometheus_alertmanager_storage_type=pvc
openshift_prometheus_alertmanager_pvc_name=alertmanager
openshift_prometheus_alertmanager_limits_memory="1Gi"
openshift_prometheus_alertbuffer_storage_type=pvc
openshift_prometheus_alertbuffer_pvc_size=10Gi
openshift_prometheus_pvc_access_modes=[ReadWriteOnce]
openshift_prometheus_oauth_proxy_cpu_requests="100m"
openshift_prometheus_node_selector={"role":"infra"}


[masters]
openshift-master1 openshift_hostname=openshift-master1 
openshift-master2 openshift_hostname=openshift-master2
openshift-master3 openshift_hostname=openshift-master3

[etcd]
openshift-master1
openshift-master2
openshift-master3

[new_nodes]
[new_masters]

[infra]
openshift-infra1
openshift-infra2

[nfs]
{{ storage_host }}

[lb]
openshift-lb  # One Day os_firewall_allow=[{"service": "haproxy stats","port": "9000/tcp"},{"service": "haproxy balance","port": "{{ conole_port | default(8443) }}/tcp"},{"service": "http","port": "80/tcp"},{"service": "https","port": "443/tcp"}] 



[nodes]
openshift-master1 openshift_hostname=openshift-master1  openshift_node_labels="{'role':'master','zone':'default','logging':'true'}" openshift_schedulable=false
openshift-master2 openshift_hostname=openshift-master2  openshift_node_labels="{'role':'master','zone':'default','logging':'true'}" openshift_schedulable=false
openshift-master3 openshift_hostname=openshift-master3  openshift_node_labels="{'role':'master','zone':'default','logging':'true'}" openshift_schedulable=false
openshift-infra1 openshift_hostname=openshift-infra1    openshift_node_labels="{'role':'infra', 'zone':'default','logging':'true'}"
openshift-infra2 openshift_hostname=openshift-infra2    openshift_node_labels="{'role':'infra', 'zone':'default','logging':'true'}"

{% for n in range(1,nodes+1) %}
openshift-node{{ "0%s" |format(n) }} openshift_hostname=openshift-node{{ "0%s" |format(n) }} openshift_node_labels="{'role':'app','zone':'default','logging':'true'}"
{% endfor %}
