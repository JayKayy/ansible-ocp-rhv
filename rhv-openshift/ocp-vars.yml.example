---
##############################################################################
### Red Hat Virtualization Engine Connection
#engine_url: https://engine.example.com/ovirt-engine/api
engine_hostname: rhvm.foo.bar
engine_url: "https://{{ engine_hostname }}/ovirt-engine/api"
engine_user: admin@internal
engine_password: 
# CA file copied from engine:/etc/pki/ovirt-engine/ca.pem; path is relative to playbook directory
#curl -k 'https://engine.example.com/ovirt-engine/services/pki-resource?resource=ca-certificate&format=X509-PEM-CA' > ca.pem
engine_cafile: files/ca.pem

##############################################################################
### Red Hat Virtualization VM Image
## For CentOS 7:
#qcow_url: https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2
## For RHEL: Find KVM Guest Image in Downloads -> RHEL on https://access.redhat.com/ and use before the link expires:
#qcow_url:https://access.cdn.redhat.com//content/origin/files/<omitted>/rhel-server-7.4-x86_64-kvm.qcow2?_auth_=<omitted>
## Alternatively, download the above KVM image, and re-host it on a local satellite:
#qcow_url: https://satellite.example.com/pub/rhel-server-7.4-x86_64-kvm.qcow2
qcow_url: http://jhorn-osx:8080/iso/rhel-server-7.4-x86_64-kvm.qcow2

## Name of cluster to install on
rhv_cluster: Default
## Name of Datacenter to install on
rhv_data_center: Default

## Name of RHV storage domain to create disks
rhv_data_storage: vmdata

##############################################################################
### Red Hat Content Subscriptions
## For subscriptions to Satellite:
#rhsm_satellite: satellite.example.com
#rhsm_activation_key: vm-key
#rhsm_org_id: Default_Organization
#rhsm_pool: none
#rhsm_katello_url: http://satellite.example.com/pub/katello-ca-consumer-latest.noarch.rpm

## For subscriptions to Red Hat's CDN
## Userid/Password could be moved to a vault file and encrypted for safety, see the following link for details:
## http://docs.ansible.com/ansible/playbooks_vault.html
rhsm_pool: 8a85f98c60c2c2b40160c32445b41b29
rhsm_user: 
rhsm_password: 

##############################################################################
### PUBLIC SSH key for access to all nodes.
## Use ssh-agent or a passwordless key in ~/.ssh/id_rsa for the PRIVATE key.
## this is the public key that is injected into each vm
root_ssh_key: 

##############################################################################
### Openshift variables
## Choices of deployment type: openshift-enterprise, origin
# openshift_release is hard coded by branch version
containerized: false
console_port: 8443
debug_level: 2

admin_user: root
# base64 encoded echo "key"|base64|tr -d '\n'
admin_ssh_priv_key: root
admin_ssh_pub_key: root

# Number of App nodes
nodes: 2
##############################################################################
### DNS entries
## Wildcard *.{{app_dns_prefix}}.{{public_hosted_zone}} must point to IP of LB
public_hosted_zone: foo.bar
local_hosted_zone: foo.bar
app_dns_prefix: apps
load_balancer_hostname: openshift-lb.{{local_hosted_zone}}
wildcard_zone: "{{app_dns_prefix}}.{{public_hosted_zone}}"
openshift_master_cluster_public_hostname: openshift.{{ public_hosted_zone }}

# Disable checking 
openshift_disable_check: memory_availability,disk_availability

# Configure the multi-tenant SDN plugin (default is 'redhat/openshift-ovs-subnet')
os_sdn_network_plugin_name: 'redhat/openshift-ovs-multitenant'
osm_cluster_network_cidr: 172.16.0.0/16
#openshift_portal_net:

osm_default_node_selector: "role=app"


storage_host: goliath.foo.bar
storage_type: nfs
storage_dir: "/hosted_engine"

# metrics
metrics_volume_size: "10Gi"
logging_volume_size: "10Gi"
cassandra_volume_size: "10Gi"
registry_volume_size: "10Gi"

openshift_master_metrics_public_url: "https://metrics.{{ wildcard_zone }}/hawkular/metrics"
# logging
logging_es_size: "10Gi"

# Use 'htpasswd -n <user>' to generate password hash. (htpasswd from httpd-tools RPM)
# Example with admin:changeme
openshift_master_htpasswd_users: {'admin': '$apr1$zAhyA9Ko$rBxBOwAwwtRuuaw8OtCwH0'}

# LoadBalancer Options
openshift_loadbalancer_additional_frontends:
  - name: apps-http
    mode: tcp
    options: 
      - "tcplog"
    binds:
      - "*:80"
    default_backend: apps-http
  - name: apps-https
    mode: tcp
    options: 
      - "tcplog"
    binds:
      - "*:443"
    default_backend: apps-https
openshift_loadbalancer_additional_backends:
  - name: apps-http
    balance: source
    mode: tcp
    servers:
      - name: infra0
        address: "{{ hostvars[groups['infra'].0]['ansible_host'] }}:80"
        opts: check
      - name: infra1
        address: "{{ hostvars[groups['infra'].1]['ansible_host'] }}:80"
        opts: check
  - name: apps-https
    balance: source
    mode: tcp
    servers:
      - name: infra0
        address: "{{ hostvars[groups['infra'].0]['ansible_host'] }}:443"
        opts: check
      - name: infra1
        address: "{{ hostvars[groups['infra'].1]['ansible_host'] }}:443"
        opts: check

# OverRides
vm_infra_wait_for_ip_delay: 30
vm_infra_wait_for_ip_retries: 10
